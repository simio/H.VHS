default namespace huggplay = "http://play.huggpunkt.org/vhsxml/1"

grammar {
    start =
        element vhsxml {
            attribute version { "1.1" },
            ( transportDefinitions?
                & formatDefinitions?
                & extensions?
                & cassettes? )
        }

    #
    #  TRANSPORT DEFINITIONS
    #
    transportDefinitions =
        element transportDefinitions { transportDefinition+ }
    transportDefinition =
        element transportDefinition {
            timestampedId,
            i18nName+,
            i18nDesc*
        }

    #
    #  STREAM/FILE FORMAT DEFINITIONS
    #
    formatDefinitions =
        element formatDefinitions { formatDefinition+ }
    formatDefinition =
        element formatDefinition {
            timestampedId,
            i18nName+,
            i18nDesc*,
            element completeness { "notEmpty" | "metaOnly" | "dataOnly" | "complete" },
            mimeType
        }

    #
    #  H.VHS EXTENSIONS
    #
    extensions =
        element extensions { extension+ }
    extension =
        element extension {
            timestampedId,
            i18nName+,
            i18nDesc*,
            author?,
            element enabled { "true" | "false" },
            element stability { "broken" | "unstable" | "stable" | "testing" }?,
            api,
            element input {
                element transport { xsd:NMTOKEN }+,
                element format { xsd:NMTOKEN }+
            },
            element output {
                element transport { xsd:NMTOKEN }+,
                element format { xsd:NMTOKEN }+
            },
            transportDefinitions?,
            formatDefinitions?
        }
    api =
        element api {
            attribute version { xsd:NMTOKEN },
            (
                ( attribute type { "api" }, empty )
                | ( attribute type { "scheme" | "javascript" },
                    ( ( attribute src { xsd:anyURI }, empty ) | xsd:string ) )
            )
        }

    #
    #  CASSETTES (stub)
    #
    # Gl√∂m inte "<![CDATA[xxx]]>"
    cassettes = element cassettes { cassette+ }
    cassette =
        element cassette {
            timestampedId,
            ( internalTypedContent | externalTypedContent )
        }

    internalTypedContent =
        element content {
            attribute mimeType { xsd:token },
            xsd:base64Binary
        }
    externalTypedContent =
        element content {
            attribute mimeType { xsd:token },
            attribute src { xsd:anyURI },
            empty
        }

    #
    #  DATA TYPES
    #
    timestampedId =
    # asOf must use ISO Date format:
    #   i.e. 2012-03-15T10:57:24
    #   or
    #   2012-03-15T10:57:24+0100
        element id {
            attribute asOf { xsd:dateTime },
            xsd:NMTOKEN
        }
    i18nName =
        element name {
            attribute xml:lang { xsd:language },
            xsd:token
        }
    i18nDesc =
        element description {
            attribute xml:lang { xsd:language },
            xsd:token
        }
    author =
        element author {
            attribute email { xsd:token }?,
            attribute website { xsd:anyURI }?,
            xsd:token
        }
    mimeType =
        # MIME types are in priority order.
        element mimeTypes {
          element mimeType { xsd:token }+
        }?
}
